[0m[[0m[0mdebug[0m] [0m[0m> Exec(testOnly, None, None)[0m
[0m[[0m[33mwarn[0m] [0m[0mbuild source files have changed[0m
[0m[[0m[33mwarn[0m] [0m[0mmodified files: [0m
[0m[[0m[33mwarn[0m] [0m[0m  /Users/abidijasser/databricks/ClusteringInfo/build.sbt[0m
[0m[[0m[33mwarn[0m] [0m[0mApply these changes by running `reload`.[0m
[0m[[0m[33mwarn[0m] [0m[0mAutomatically reload the build when source changes are detected by setting `Global / onChangedBuildSource := ReloadOnSourceChanges`.[0m
[0m[[0m[33mwarn[0m] [0m[0mDisable this warning by setting `Global / onChangedBuildSource := IgnoreSourceChanges`.[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Test / testOnly[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 2 Scala sources to /Users/abidijasser/databricks/ClusteringInfo/target/scala-2.12/classes ...[0m
[0m[[0m[0minfo[0m] [0m[0mdone compiling[0m
[0m[[0m[0minfo[0m] [0m[0m[32mIntervalTreeSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTree holding a single interval [1, 5][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not be empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 1 result on query interval [4, 8][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mdepth.Node holding many intervals[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not be empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 2 results on query interval [6, 19][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mIntervalSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAn interval [1,5][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not intersect with [-1,0][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not intersect with [6,7][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should intersect with [0,1][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should intersect with [5,6][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should intersect with [2,3][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should intersect with [0,4][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should intersect with [3,10][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should intersect with [0,10][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAn interval [b,c][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not intersect with [d,e][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should intersect with [b,d][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAn interval [b,c][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be greater than [a,e][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be lower than [f,g][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be equal to [b,c][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mIntervalSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAn interval [b,c][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not intersect with [d,e][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should intersect with [b,d][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAn interval [b,c][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be greater than [a,e][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be lower than [f,g][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should be equal to [b,c][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAn interval [1,5][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not intersect with [-1,0][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not intersect with [6,17][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should intersect with [0,1][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should intersect with [5,6][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should intersect with [2,3][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should intersect with [0,4][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should intersect with [3,10][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should intersect with [0,10][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mAn interval [7,17][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should intersect with [5,20][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mOverlapDepthSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mcompute the overlap depth[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return file2, file3 and file7 as head of groups[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return one group only[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return every interval as head of separate group[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 2.3333332538604736 as overlap depth[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return the number of files when all files have the same min max[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 5.666666507720947 as overlap depth[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 1 as overlap depth[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mNodeSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mdepth.Node holding a single interval [1, 5][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not be empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[33m- should has no left or right children !!! IGNORED !!![0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 1 result on query interval [4, 8][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 1 result on query interval [2, 3][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 1 result on query interval [0, 1][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 0 result on query interval [-1, 0][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 1 result on query interval [6, 7][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mdepth.Node holding many intervals[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not be empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[33m- should has 1 left and 1 right child !!! IGNORED !!![0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 2 results on query interval [6, 19][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mdepth.Node holding same interval multiple times[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not be empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[33m- should has 1 left and 1 right child !!! IGNORED !!![0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 3 results on query interval [6, 19][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 3 results on query interval [300, 400][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 0 results on query interval [360, 400][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mdepth.Node holding sorted intervals[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not be empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[33m- should has 1 left and 1 right child !!! IGNORED !!![0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 2 results on the frist and last files and 3 else[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mNodeSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mdepth.Node holding a single interval [1, 5][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not be empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[33m- should has no left or right children !!! IGNORED !!![0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 1 result on query interval [4, 8][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 1 result on query interval [2, 3][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 1 result on query interval [0, 1][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 0 result on query interval [-1, 0][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 1 result on query interval [6, 7][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mNode holding many intervals[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not be empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should has 1 left and 1 right child[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 2 results on query interval [6, 19][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mdepth.Node holding same interval multiple times[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not be empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[33m- should has 1 left and 1 right child !!! IGNORED !!![0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 3 results on query interval [6, 19][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 3 results on query interval [300, 400][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 0 results on query interval [360, 400][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mNode holding sorted intervals[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not be empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[33m- should has 1 left and 1 right child !!! IGNORED !!![0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 2 results on the first and last files and 3 else[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mBug1 Node holding many intervals[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not be empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 2 results on the first and last files and 3 else[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mNode holding many intervals all in one group[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not be empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 2 results on the first and last files and 3 else[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mIntervalTreeSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mTree holding a single interval [1, 5][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not be empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 1 result on query interval [4, 8][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mdepth.Node holding many intervals[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not be empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 2 results on query interval [6, 19][0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mClusteringMetricsSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mcompute the overlap metrics[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 2.0 as overlap depth[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return the number of files when all files have the same min max[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 3.7778 as overlap depth and compute the histogram[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 1 as overlap depth and compute the histogram[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mNode holding many intervals all in one group[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should not be empty[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should return 5 as overlap depth[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[33m- BUG: use the overlapping branches as head of group !!! IGNORED !!![0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mDeltaClusteringMetricsSpec:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- test overlap for a delta table with non overlapping files[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- test overlap for a delta table with all overlapping files *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  java.util.NoSuchElementException: head of empty list[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at scala.collection.immutable.Nil$.head(List.scala:469)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at scala.collection.immutable.Nil$.head(List.scala:466)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at jass.metrics.ClusteringMetricsV2$.buildSubIntervals(ClusteringMetrics.scala:106)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at jass.metrics.ClusteringMetricsV2$.computeMetrics(ClusteringMetrics.scala:44)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at jass.metrics.DeltaClusteringMetrics$.compute(DeltaClusteringMetrics.scala:21)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at jass.metrics.DeltaClusteringMetricsSpec.$anonfun$new$4(DeltaClusteringMetricsSpec.scala:56)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at jass.metrics.DeltaClusteringMetricsSpec.$anonfun$new$4$adapted(DeltaClusteringMetricsSpec.scala:42)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.apache.spark.sql.test.SQLTestUtils.$anonfun$withTempDir$1(SQLTestUtils.scala:78)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.apache.spark.sql.test.SQLTestUtils.$anonfun$withTempDir$1$adapted(SQLTestUtils.scala:77)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.apache.spark.SparkFunSuite.withTempDir(SparkFunSuite.scala:208)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 35 seconds, 311 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 83[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 9, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 82, failed 1, canceled 0, ignored 8, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m*** 1 TEST FAILED ***[0m[0m
[0m[[0m[31merror[0m] [0m[0mFailed tests:[0m
[0m[[0m[31merror[0m] [0m[0m	jass.metrics.DeltaClusteringMetricsSpec[0m
[0m[[0m[0mdebug[0m] [0m[0mForcing garbage collection...[0m
[0m[[0m[31merror[0m] [0m[0m(Test / [31mtestOnly[0m) sbt.TestsFailedException: Tests unsuccessful[0m
[0m[[0m[31merror[0m] [0m[0mTotal time: 47 s, completed Oct 8, 2022 11:46:27 PM[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
[0m[[0m[33mwarn[0m] [0m[0mIn the last 10 seconds, 5.14 (54.2%) were spent in GC. [Heap: 0.59GB free of 1.12GB, max 1.33GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.[0m
