[0m[[0m[0mdebug[0m] [0m[0m> Exec(testOnly jass.metrics.ClusteringMetricsSpec -- -z "optimized depth algorithm V2", None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0mEvaluating tasks: Test / testOnly[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /Users/abidijasser/databricks/ClusteringInfo/target/scala-2.12/test-classes ...[0m
[0m[[0m[0minfo[0m] [0m[0mdone compiling[0m
[0m[[0m[33mwarn[0m] [0m[0mCanceling execution...[0m
[0m[[0m[33mwarn[0m] [0m[0mIn the last 10 seconds, 5.622 (59.4%) were spent in GC. [Heap: 0.77GB free of 1.00GB, max 1.33GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.[0m
[0m[[0m[33mwarn[0m] [0m[0mIn the last 10 seconds, 5.897 (60.7%) were spent in GC. [Heap: 0.83GB free of 1.05GB, max 1.33GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.[0m
[0m[[0m[33mwarn[0m] [0m[0mIn the last 16408 seconds, 9.667 (0.1%) were spent in GC. [Heap: 0.88GB free of 1.09GB, max 1.33GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.[0m
[0m[[0m[33mwarn[0m] [0m[0mIn the last 10 seconds, 5.455 (56.8%) were spent in GC. [Heap: 0.91GB free of 1.13GB, max 1.33GB] Consider increasing the JVM heap using `-Xmx` or try a different collector, e.g. `-XX:+UseG1GC`, for better performance.[0m
